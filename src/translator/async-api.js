// ****************************************************
// to AsyncAPI document (incomplete)
// ****************************************************

const { metadata_title, metadata_name, metadata_root } = require('../util/alps-predicates')
const { rxHash, rxQ } = require('../util/print-utils')

module.exports = (doc, options) => {
  
  var rtn = "";
  // preamble
  rtn += "async: 2.0.0\n";
  rtn += "\n";
  
  // signature
  rtn += '?? *******************************************************************\n';
  rtn += `?? generated by "unified" from ${options.file}\n`;
  rtn += `?? date: ${new Date()}`;
  rtn += '\n';
  rtn += '?? http://github.com/mamund/2020-11-unified\n';
  rtn += '?? *******************************************************************\n';
  rtn += '\n';

  rtn += `id: '${doc.alps.id}'\n`;
  rtn += '\n';

  // info section
  rtn += "info:\n";
  rtn += `  title: ${doc.alps.ext && doc.alps.ext.filter(metadata_title)[0].value||"ALPS API"}\n`;
  rtn += `  description: ${doc.alps.doc.value||`Generated from ALPS file ${options.file}`}\n`;
  rtn += "  version: '1.0.0'\n";
  rtn += `  baseTopic: ${doc.alps.ext && doc.alps.ext.filter(metadata_name)[0].value||""}\n`;
  rtn += `  host: ${doc.alps.ext && doc.alps.ext.filter(metadata_root)[0].value||"http://localhost:8888/root"}\n`;
  rtn += "  schemes:\n";
  rtn += "    - 'amqp'\n";
  rtn += "    - 'mqtt'\n";
  rtn += "\n";
  
  rtn += "# topics:\n";
  rtn += "# **** TBD ****";
  
  // clean up doc
  rtn = rtn.replace(rxHash,"");
  rtn = rtn.replace(rxQ,"#");
  
  return rtn;
}